body {
    background-color: #fff;
    color: #333;
    margin: 0;
    font: 1.2em / 1.2 Arial, Helvetica, sans-serif;
  }

  img {
      max-width: 100%;
      display: block;
  }
  
  .logo {
    font-size: 200%;
    padding: 50px 20px;
    margin: 0 auto;
    max-width: 980px;
  }
  
  .grid {
    margin: 0 auto;
    padding: 0 20px;
    max-width: 80%;
  }
  
  nav {
    background-color: #000;
    padding: .5em;
  }
  
  nav ul {
    margin: 0;
    padding: 0;
  }
  
  nav a {
    color: #fff;
    text-decoration: none;
    padding: .5em 1em;
  }
  
  .photos {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .feature {
      width: 200px;
  }

/* 1. Barra de navegación */

nav{
  position: sticky; /* Con position sticky hacemos que la barra de navegación quede fijada */
  top: 0; /* Al llegar a la posición 0 del viewport queda fijada */
  z-index: 40; /* La barra de navegación queda por encima de otros elementos que tengan menor valor, si hubiera algun elemento con más valor se pondría por encima */ 
  box-sizing: border-box;
}

nav ul{
  list-style: none; /* Quitamos los elementos de la lista */
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between; /* con space-between conseguimos que los elementos se distribuyan a lo largo del elemento */ 
}


/* 2. Imagen en el articulo */
/* He utilizado float left para colocar la imagen, float es más antiguo y creo que será más util en proyectos pequeños, ya que flexbox nos viene mejor cuando los diseños son más complejos */

article img{
  float: left;
  flex-wrap: wrap;
  padding: 25px;
  margin: -15px;
}

/* 3. Diseño de dos columnas */
/* He tenido que modificar el max-width de .grid para que se ajustara mejor a la página y no quedara todo apelotonado en el centro */

main{
  display: flex;
  flex-direction: row;
  gap: 20px;
  padding: 10px;
  width: 100%; /* He utilizado width 100% para que ocupe todo el ancho de la pantalla, que no es tal, ya que .grid tiene un max-width del 80% */
  box-sizing: border-box;
}

article{
  flex: 3; /* La etiqueta <article> tendrá 3 veces mas tamaño */
}

aside{
  flex: 1;
}

/* 4. Galeria de imagenes */

.photos{
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(50px,170px)); /* Con esto hacemos que cada columna tenga el tamaño adeacuado al tamaño de viewport */
  grid-auto-rows: 1fr;
  grid-auto-flow: row;
  grid-auto-columns: 1fr;
  margin: auto;
  gap: 1px; /* Separación de 1px entre las imagenes */
}
